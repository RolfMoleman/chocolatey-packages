<?xml version="1.0" encoding="utf-8"?>
<!-- Do not remove this test for UTF-8: if ??? doesn?t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd">
  <metadata>
    <!-- Read this before publishing packages to chocolatey.org: https://github.com/chocolatey/chocolatey/wiki/CreatePackages -->
    <id>terraform</id>
    <title>Terraform</title>
    <version>0.13.0-beta3</version>
    <authors>Mitchell Hashimoto, HashiCorp</authors>
    <owners>James Toyer</owners>
    <summary>Terraform is a tool for building, changing, and versioning infrastructure safely and efficiently. Terraform can manage existing and popular service providers as well as custom in-house solutions.</summary>
    <description>
Terraform is a tool for building, changing, and versioning infrastructure safely and efficiently. Terraform can manage existing and popular service providers as well as custom in-house solutions.

The key features of Terraform are:

* **Infrastructure as Code**: Infrastructure is described using a high-level configuration syntax. This allows a blueprint of your datacenter to be versioned and treated as you would any other code. Additionally, infrastructure can be shared and re-used.
* **Execution Plans**: Terraform has a "planning" step where it generates an *execution plan*. The execution plan shows what Terraform will do when you call apply. This lets you avoid any surprises when Terraform manipulates infrastructure.
* **Resource Graph**: Terraform builds a graph of all your resources, and parallelizes the creation and modification of any non-dependent resources. Because of this, Terraform builds infrastructure as efficiently as possible, and operators get insight into dependencies in their infrastructure.
* **Change Automation**: Complex changesets can be applied to your infrastructure with minimal human interaction. With the previously mentioned execution plan and resource graph, you know exactly what Terraform will change and in what order, avoiding many possible human errors.

For more information, see the [introduction section](http://www.terraform.io/intro) of the Terraform website.
    </description>
    <releaseNotes>
## 0.13.0-beta3 (July 01, 2020)

BUG FIXES:

* backend/azurerm: support for snapshotting the blob used for remote state storage prior to change ([#24069](https://github.com/hashicorp/terraform/issues/24069))
* backend/remote: Prevent panic when there's a connection error ([#25341](https://github.com/hashicorp/terraform/issues/25341))
* command: Fix bug with global -v/-version/--version flags introduced in 0.13.0beta2 ([#25277](https://github.com/hashicorp/terraform/issues/25277))
* command: Fix command test fixture modify-in-place bugs, which could cause state leak between tests ([#25299](https://github.com/hashicorp/terraform/issues/25299))
* command: Preserve more comments when rerunning 0.13upgrade ([#25381](https://github.com/hashicorp/terraform/issues/25381))
* command/console: enable use of impure functions in console (for example, bcrypt()) ([#25442](https://github.com/hashicorp/terraform/issues/25442))
* command/import: Fix -allow-missing-config option ([#25352](https://github.com/hashicorp/terraform/issues/25352))
* command/init: return an error with invalid -backend-config files ([#25411](https://github.com/hashicorp/terraform/issues/25411))
* communicator/winrm: Inlcude any user-configured timeout for winrm connection ([#25350](https://github.com/hashicorp/terraform/issues/25350))
* config: Add missing validation to prevent provider configuration within modules using depends_on ([#25345](https://github.com/hashicorp/terraform/issues/25345))
* configs: Fix nested provider requirements bug introduced in 0.13.0beta2 ([#25334](https://github.com/hashicorp/terraform/issues/25334))
* configs: Fix panic when required_providers blocks have non-string attribute values ([#25369](https://github.com/hashicorp/terraform/issues/25369))
* configs: Fix panic for invalid resource provider ([#25408](https://github.com/hashicorp/terraform/issues/25408))
* core: Hide empty plans for misbehaving data sources ([#25302](https://github.com/hashicorp/terraform/issues/25302))
* provider/terraform: Don't change non-computed attribute, which result in a perpetual diff ([#25297](https://github.com/hashicorp/terraform/issues/25297))
* terraform: Relax import-specific provider configuration constraints, to permit any values that can be evaluated statically ([#25420](https://github.com/hashicorp/terraform/issues/25420))
* vendor: The merge function will no longer panic if all given maps are empty ([#25303](https://github.com/hashicorp/terraform/issues/25303))
* vendor: The various set-manipulation functions, like setunion, will no longer panic if given an unknown set value ([#25318](https://github.com/hashicorp/terraform/issues/25318))

BREAKING CHANGES:

command/state: exit code 1 if state rm is called on a resource that does not exist ([#22300](https://github.com/hashicorp/terraform/issues/22300))
command/login: Require "yes" to confirm, no longer accepting "y" ([#25379](https://github.com/hashicorp/terraform/issues/25379))

## Previous Releases
For more information on previous releases, check out the changelog on [GitHub](https://github.com/hashicorp/terraform/blob/v0.13.0-beta3/CHANGELOG.md).</releaseNotes>
    <projectUrl>http://www.terraform.io</projectUrl>
    <docsUrl>https://www.terraform.io/docs/index.html</docsUrl>
    <bugTrackerUrl>https://github.com/hashicorp/terraform/issues</bugTrackerUrl>
    <projectSourceUrl>https://github.com/hashicorp/terraform</projectSourceUrl>
    <packageSourceUrl>https://github.com/jamestoyer/chocolatey-packages</packageSourceUrl>
    <tags>terraform hashicorp</tags>
    <copyright>HashiCorp 2015-2020</copyright>
    <licenseUrl>https://github.com/hashicorp/terraform/blob/master/LICENSE</licenseUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <!-- Important note about https://cdn.rawgit.com: Files are cached permanently after the first request. Use commit URLs when updating the icon. -->
    <iconUrl>https://raw.githubusercontent.com/jamestoyer/chocolatey-packages/58ab86c08224c2ba79af2080346c53c1cc440afc/terraform/icons/terraform.png</iconUrl>
    <!--<dependencies>
      <dependency id="" version="" />
    </dependencies>-->
  </metadata>
  <files>
    <file src="tools\**" target="tools" />
  </files>
</package>
